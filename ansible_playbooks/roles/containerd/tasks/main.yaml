---
# ========= Kubernetes repo ================
- name: Downloading Kubernetes archive keyring
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    dest: /usr/share/keyrings/kubernetes-archive-keyring.asc
    mode: '0755'

- name: Adding kubernetes repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present
    filename: kubernetes

# =========== kubeadm & kubectl ==============
- name: Installing kubeadm, kubectl
  ansible.builtin.apt:
    update_cache: true
    name: "{{ item }}"
    state: present
  with_items:
    - kubeadm
    - kubectl

# ==== kubelet Setup & Configuration ====
- name: Check kubelet service
  ansible.builtin.service:
    name: kubelet
    state: started
  ignore_errors: true
  register: kubelet_svc

- name: Check result
  ansible.builtin.debug:
    msg: "kubelet service is {{ 'already running.' if kubelet_svc.state == 'started' else 'not running.' }}"

- name: Installing kubelet service
  when: kubelet_svc.state != 'started'
  block:
    - name: Installing kubelet
      ansible.builtin.apt:
        name: kubelet
        state: present

- name: Hold the installed packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl

# =========== containerd setup & configuration ================
- name: Check necessary packages
  ansible.builtin.service:
    name: containerd
    state: started
  ignore_errors: true
  register: containerd_svc

- name: Check result
  ansible.builtin.debug:
    msg: "Contianerd service is {{ 'already running' if containerd_svc.state == 'started' else 'not running' }}"

- name: Setup Containerd basic necessary packages
  when: containerd_svc.state != 'started'
  block:

    - name: Download docker keyring
      ansible.builtin.shell: |
        cd /usr/share/keyrings/
        wget https://download.docker.com/linux/ubuntu/gpg
        gpg --dearmor -o /usr/share/keyrings/docker.gpg --yes /usr/share/keyrings/gpg
        chmod a+r /usr/share/keyrings/docker.gpg
      changed_when: true

    - name: Add containerd repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable"
        state: present
        filename: docker

    - name: Installing conteinerd.io
      ansible.builtin.apt:
        update_cache: true
        name: containerd.io
        state: present

    - name: Check config.toml file availability
      ansible.builtin.stat:
        path: /etc/containerd/config.toml
      ignore_errors: true
      register: config_file

    - name: Check result
      ansible.builtin.debug:
        msg: "config.toml file {{ 'present.' if config_file.stat.exists else 'absent.' }}"

    - name: Update contianerd configuration
      when: config_file.stat.exists
      block:
        - name: Truncate config.toml file for new configuration
          ansible.builtin.copy:
            content: ""
            dest: /etc/containerd/config.toml
            mode: '0644'
          changed_when: install_checker == 0

        - name: Configure config.toml file for systemd cgroup driver
          ansible.builtin.lineinfile:
            path: /etc/containerd/config.toml
            insertafter: EOF
            line: |
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                  SystemdCgroup = true

        - name: Restart containerd
          ansible.builtin.service:
            name: containerd
            state: restarted
